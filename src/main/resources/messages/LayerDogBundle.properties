# Layer Dog Plugin Messages

# Inspection group
inspection.group.name=Layer Dog Architecture

# Inspection names
inspection.controller.display.name=Controller layer should only call DTO layer
inspection.dto.display.name=DTO layer should only call API layer  
inspection.api.display.name=API layer should not call other APIs directly
inspection.flow.display.name=FLOW layer usage validation
inspection.dao.display.name=DAO layer should only interact with database

# Controller layer violations
controller.calls.non.dto=Controller ''{0}'' is calling ''{1}'' which is not in the DTO layer. Controllers should only call DTOs.
controller.has.business.logic=Controller ''{0}'' contains business logic. Controllers should delegate to DTOs.

# DTO layer violations  
dto.calls.non.api=DTO ''{0}'' is calling ''{1}'' which is not in the API layer. DTOs should only call the API layer.
dto.has.business.logic=DTO ''{0}'' contains business logic. DTOs should only handle validation and conversion.

# API layer violations
api.calls.other.api=API ''{0}'' is directly calling another API ''{1}''. Use FLOW layer for API-to-API communication.
api.invalid.dependency=API ''{0}'' is calling ''{1}'' which is not in DAO or FLOW layer.

# FLOW layer violations
flow.invalid.usage=FLOW ''{0}'' is not being used correctly. FLOW should orchestrate API calls.
flow.calls.invalid.layer=FLOW ''{0}'' is calling ''{1}'' which is not an API layer.

# DAO layer violations
dao.calls.non.db=DAO ''{0}'' is calling ''{1}'' which is not a database-related class. DAOs should only interact with databases.
dao.invalid.dependency=DAO ''{0}'' has invalid dependency on ''{1}''.

# Quick fix messages
quickfix.move.to.dto=Move this call to DTO layer
quickfix.use.flow=Use FLOW layer for API communication
quickfix.extract.to.api=Extract business logic to API layer
quickfix.create.dao.method=Create DAO method for database operation

# General messages
layer.unknown=Unable to determine layer for class ''{0}''
layer.violation.detected=Layer violation detected in ''{0}''
